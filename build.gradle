plugins {
	id 'java'
	id 'eclipse'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	//id 'io.awspring.cloud:spring-cloud-aws-dependencies'
}

group = 'com.amway'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'io.r2dbc:r2dbc-h2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webflux-ui
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.3.0'
    //s3
    implementation platform('software.amazon.awssdk:bom:2.25.11')
    implementation platform('io.awspring.cloud:spring-cloud-aws-dependencies:3.0.1')
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:netty-nio-client'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-aws
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version: '2.2.6.RELEASE'
	//implementation 'io.awspring.cloud:spring-cloud-starter-aws'
	implementation 'io.awspring.cloud:spring-cloud-aws-starter'
	implementation 'com.amazonaws.serverless:aws-serverless-java-container-springboot3:2.0.0'
	
  
    
}

tasks.named('test') {
	useJUnitPlatform()
}

task buildZip(type: Zip) {
  from compileJava
  from processResources
  into('lib') {
    from(configurations.compileClasspath) {
      exclude 'tomcat-embed-*'
    }
  }
}

build.dependsOn buildZip
