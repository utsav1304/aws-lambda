AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Product API written with SpringBoot with the aws-serverless-java-container library

Globals:
  Api:
    # API Gateway regional endpoints
    EndpointConfiguration: REGIONAL

Resources:
  ProductAPI:
    Type: AWS::Serverless::Api
    #DeletionPolicy: Retain
    Properties:
      StageName: dev
      Name: ProductAPI
  ProductFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: com.am.product.LambdaHandler::handleRequest
      Runtime: java17
      CodeUri: .
      MemorySize: 1512
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      PackageType: Zip
      Policies: AWSLambdaBasicExecutionRole
      SnapStart:
       ApplyOn: PublishedVersions
      Timeout: 60
      
      Events:
        ApiEvent:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /{proxy+}
            Method: ANY
            TimeoutInMillis: 20000
            RestApiId: !Ref ProductAPI
            
  ProductDynamoDBTable:
    Type: 'AWS::DynamoDB::Table'
    DeletionPolicy: Retain
    Properties:
      TableName: Product
     # DeletionPolicy: Retain
      AttributeDefinitions:
        - AttributeName: productCode
          AttributeType: S
      KeySchema:
        - AttributeName: productCode
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
      BillingMode: PROVISIONED
      ContributorInsightsSpecification:
        Enabled: TRUE
        
        
        
  ProductImageS3:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      BucketName: product-bucket-us
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: FALSE
        BlockPublicPolicy: FALSE
        IgnorePublicAcls: FALSE
        RestrictPublicBuckets: FALSE
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred

     

    

Outputs:
  SpringBootProductApi:
    Description: URL for application
    Value: !Sub 'https://${ProductAPI}.execute-api.${AWS::Region}.amazonaws.com'
    Export:
      Name: SpringBootProductApi
  ProductFunction:
    Description: "ProductFunction Lambda Function ARN"
    Value: !GetAtt ProductFunction.Arn
    
  DynamoDBTableName:
    Description: "Product Table Name"
    Value: !Ref ProductDynamoDBTable
    
  DynamoDBTableArn:
    Description: "Product Table Arn"
    Value: !GetAtt ProductFunction.Arn
    
  S3BucketName:
    Description: "S3BucketName For image"
    Value: !Ref ProductImageS3